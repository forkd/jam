# OpenSSL root CA configuration file.
# Based on:
# https://jamielinux.com/docs/openssl-certificate-authority/appendix/intermediate-configuration-file.html


[ca]
# `man ca`
default_ca              = CA_default


[CA_default]
# Directory and file locations.
dir                     = {{path}}
certs                   = $dir/certs
crl_dir                 = $dir/crl
new_certs_dir           = $dir/newcerts
database                = $dir/index.txt
serial                  = $dir/serial
RANDFILE                = $dir/private/.rand

# Root key and certificate.
private_key             = $dir/private/{{name}}.key.pem
certificate             = $dir/certs/{{name}}.cert.pem

# For certificate revocation lists.
crlnumber               = $dir/crlnumber
crl                     = $dir/crl/{{name}}.crl.pem
crl_extensions          = crl_ext
default_crl_days        = 30

# Message digest
default_md              = sha256

name_opt                = ca_default
cert_opt                = ca_default
default_days            = 375
preserve                = no
policy                  = policy_loose


[policy_strict]
# Root CA should only sign intermediate certificates that match.
# See the POLICY FORMAT section of `man ca`.
countryName             = match
stateOrProvinceName     = match
organizationName        = match
organizationalUnitName  = optional
commonName              = supplied
emailAddress            = optional


[policy_loose]
# Allow the intermediate CA to sign a more diverse range of certificates.
# See the POLICY FORMAT section of `man ca`.
countryName             = optional
stateOrProvinceName     = optional
localityName            = optional
organizationName        = optional
organizationalUnitName  = optional
commonName              = supplied
emailAddress            = optional


[req]
# Options for the req tool --`man req`.
default_bits            = 2048
distinguished_name      = req_distinguished_name
string_mask             = utf8only

# Message digest
default_md              = sha256

# Extension to add when the -x509 option is used.
x509_extensions         = v3_ca


[req_distinguished_name]
# See <https://en.wikipedia.org/wiki/Certificate_signing_request>.
countryName             = Country name (2 letter code)
stateOrProvinceName     = State or province name (2 letter code)
localityName            = Locality name
0.organizationName      = Organization name
organizationalUnitName  = Organizational unit name
commonName              = Common name
emailAddress            = Email address

# Optionally, specify some defaults.
countryName_default             = BR
stateOrProvinceName_default     = MG
localityName_default            = Belo Horizonte
0.organizationName_default      = Cemig
#organizationalUnitName_default  =
#emailAddress_default            =


[v3_ca]
# Extensions for a typical CA --`man x509v3_config`.
subjectKeyIdentifier    = hash
authorityKeyIdentifier  = keyid:always,issuer
basicConstraints        = critical,CA:true
keyUsage                = critical,digitalSignature,cRLSign,keyCertSign


[v3_intermediate_ca]
# Extensions for a typical intermediate CA --`man x509v3_config`.
subjectKeyIdentifier    = hash
authorityKeyIdentifier  = keyid:always,issuer
basicConstraints        = critical,CA:true,pathlen:0
keyUsage                = critical,digitalSignature,cRLSign,keyCertSign


[usr_cert]
# Extensions for client certificates --`man x509v3_config`.
basicConstraints        = CA:FALSE
nsCertType              = client,email
nsComment               = "OpenSSL generated client certificate"
subjectKeyIdentifier    = hash
authorityKeyIdentifier  = keyid,issuer:always
keyUsage                = critical,digitalSignature,keyEncipherment
extendedKeyUsage        = serverAuth


[server_cert]
# Extensions for server certificates --`man x509v3_config`.
basicConstraints        = CA:FALSE
nsCertType              = server
nsComment               = "OpenSSL generated server certificate"
subjectKeyIdentifier    = hash
authorityKeyIdentifier  = keyid,issuer:always
keyUsage                = critical,digitalSignature,keyEncipherment
extendedKeyUsage        = serverAuth
crlDistributionPoints   = URI:{{uri_crl}}/{{name}}.crl.pem
authorityKeyIdentifier  = OCSP;URI:{{uri_ocsp}}


[usr_icpbr]
### EXPERIMENTAL: Extensions for ICP-Brasil certificates --see DOC-ICP-04.
authorityKeyIdentifier  = keyid:always
keyUsage                = critical,digitalSignature,nonRepudiation,keyEncipherment
certificatePolicies     = @policy_icpbr
crlDistributionPoints   = URI:{{uri_crl}}/{{name}}.crl.pem
subjectAltName          = otherName.1:2.16.76.1.3.1;UTF8:010119701111111111122222222222333333333333333aaaaaaaaaa,otherName.2:2.16.76.1.3.6;UTF8:444444444444,otherName.3:2.16.76.1.3.5;UTF8:55555555555566677778888888888888888888888,email:copy


[policy_icpbr]
policyIdentifier = 1.3.6.1.4.1.14975.1.3.1.1
CPS.1 = "https://cemig.com.br/dpc-ac-cemig.pdf"


[crl_ext]
# Extension for CRLs --`man x509v3_config`.
authorityKeyIdentifier  = keyid:always


[ocsp]
# Extension for OCSP signing certificates --`man ocsp`.
basicConstraints        = CA:FALSE
subjectKeyIdentifier    = hash
authorityKeyIdentifier  = keyid,issuer
keyUsage                = critical,digitalSignature
extendedKeyUsage        = critical,OCSPSigning
